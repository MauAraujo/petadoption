{"version":3,"sources":["assets/images/cat.svg","components/NavBar.js","components/footer.js","components/layout.js","pages/app-navigation.js","components/ScrollToTop.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","Navbar","collapseOnSelect","expand","fixed","className","Container","Brand","to","Image","src","logo","alt","Toggle","Collapse","id","Nav","Item","exact","activeClassName","Footer","props","Layout","children","Homepage","lazy","Detail","Catalogo","Dashboard","Login","Articles","ArticleDetail","Diet","DietDetail","AppNavigation","fallback","path","component","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5b75b14.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cat.28bfffff.svg\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./styles/NavBar.scss\";\nimport { Navbar, Container, Nav, Image } from \"react-bootstrap\";\nimport logo from \"../assets/images/cat.svg\";\n\nexport default function NavBar() {\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" fixed=\"top\" className=\"header\">\n      <Container>\n        <Navbar.Brand>\n          <NavLink className=\"navbar-brand d-none d-sm-block\" to=\"/\">\n            <Image className=\"logo\" src={logo} alt={\"Logotipo de la página\"}></Image>\n            <span className=\"brand-name\">Pet Adoption</span>\n          </NavLink>\n        </Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"header\" />\n        <Navbar.Collapse id=\"header\">\n          <Nav className=\"mr-auto\">\n            <Nav.Item>\n              <span>|</span>\n            </Nav.Item>\n            <Nav.Item className=\"nav-item-capital\">\n              <NavLink exact activeClassName=\"active\" to=\"/articulos\">\n                Artículos\n              </NavLink>\n            </Nav.Item>\n          </Nav>\n          <Nav className=\"ml-auto\">\n            <Nav.Item className=\"nav-item-capital\">\n              <NavLink exact activeClassName=\"active\" to=\"/catalogo\">\n                Adopta ahora\n              </NavLink>\n            </Nav.Item>\n            <Nav.Item>\n              <span>|</span>\n            </Nav.Item>\n            <Nav.Item>\n              <NavLink exact activeClassName=\"active\" to=\"/login\">\n                Ingresar\n              </NavLink>\n            </Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","import React, { Fragment } from 'react'\nimport { NavLink } from \"react-router-dom\"\nimport './styles/footer.scss'\n\nexport default function Footer(props) {\n  return (\n    <Fragment>\n      <div className='footer-container'>\n        <div className='container py-4'>\n          <div className='row no-gutters'>\n            <div className='col-12 col-md-3'>\n              <div className='row'>\n                <div className='col-12'>\n                  <h2 className='title'>Logo</h2>\n                </div>\n                <div className='col-12'>\n                  <p className='txt'>\n                    Avenida San Claudio,\n                    <br />\n                    Blvrd 14 Sur, Cdad. Universitaria,\n                    <br /> 72592 Puebla, Pue.\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className='col-12 col-md-3'>\n              <h2 className='subtitle'>Fundacion</h2>\n              <div className='row'>\n                <div className='col-6'>Acerca</div>\n                <div className='col-6'>Sponsors</div>\n                <div className='col-6'>Blog</div>\n                <div className='col-6'>Mercancia</div>\n                <div className='col-6'>FAQ</div>\n                <div className='col-6'>Descargas</div>\n                <div className='col-6'>Contact</div>\n              </div>\n            </div>\n\n            {/* <div className='col-12 col-md-4 offset-md-2'>\n              <h2 className='subtitle'>Mantenos informados</h2>\n              <p className='txt'>\n                ¿Quieres actualizaciones y noticias en tu correo?\n              </p>\n              <form>\n                <div className='form-row'>\n                  <div className='form-group col-md-6'>\n                    <input\n                      type='text'\n                      className='form-control input-outline'\n                      id='name'\n                      placeholder='Nombre'\n                    />\n                  </div>\n                  <div className='form-group col-md-6'>\n                    <input\n                      type='mail'\n                      className='form-control input-outline'\n                      id='mail'\n                      placeholder='Correo electronico'\n                    />\n                  </div>\n                </div>\n                <button type='submit' className='btn button'>\n                  Aceptar\n                </button>\n              </form>\n            </div> */}\n          </div>\n        </div>\n      </div>\n      <div className='legal-container'>\n        <div className='container'>\n          <nav className='navbar navbar-expand-lg'>\n            <ul className='navbar-nav mr-auto'>\n              <li className='nav-item'>\n                <span>© Derechos reservados | 2020</span>\n              </li>\n            </ul>\n            <ul className='navbar-nav ml-auto'>\n              <li className='nav-item'>\n                <NavLink exact activeClassName='active' to='/'>\n                  Terminos y condiciones\n                </NavLink>\n              </li>\n              <li className='nav-item'>\n                <span>·</span>\n              </li>\n              <li className='nav-item'>\n                <NavLink exact activeClassName='active' to='/'>\n                  Avisos de privacidad\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n","import React from \"react\";\nimport Header from \"./NavBar\";\nimport Footer from \"./footer\";\n\nexport default function Layout(props) {\n  return (\n    <div>\n      <Header />\n      <section className=\"pt-5 my-3 \">{props.children}</section>\n      <Footer />\n    </div>\n  );\n}\n","import React, { Fragment, Suspense, lazy } from \"react\";\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\n//Layout\nimport Layout from \"../components/layout\";\n// Pages\nconst Homepage = lazy(() => import(\"./homepage\"));\nconst Detail = lazy(() => import(\"./detail\"));\nconst Catalogo = lazy(() => import(\"./catalogo\"));\nconst Dashboard = lazy(() => import(\"./dashboard\"));\nconst Login = lazy(() => import(\"./login\"));\nconst Articles = lazy(() => import(\"./articles\"));\nconst ArticleDetail = lazy(() => import(\"./article-detail\"));\nconst Diet = lazy(() => import(\"./diet\"));\nconst DietDetail = lazy(() => import(\"./diet-detail\"));\n\nexport default function AppNavigation() {\n  return (\n    <Fragment>\n      {/* <Legal/> */}\n      <Layout>\n        <Suspense fallback={<div>Cargando...</div>}>\n          <Switch>\n            <Route path=\"/\" exact component={Homepage} />\n            <Route path=\"/about\" exact component={Homepage} />\n            <Route path=\"/detail\" exact component={Detail} />\n            <Route path=\"/detail/:id\" exact component={Detail} />\n            <Route path=\"/catalogo\" exact component={Catalogo} />\n            <Route path=\"/articulos\" component={Articles} />\n            <Route path=\"/articulo/:id\" component={ArticleDetail} />\n            <Route path=\"/dieta\" exact component={Diet} />\n            <Route path=\"/dieta/:animal/:age/:breed/\" component={DietDetail} />\n            <Route path=\"/dashboard\" exact component={Dashboard} />\n            <Route path=\"/login\" exact component={Login} />\n            <Route component={Homepage} />\n          </Switch>\n        </Suspense>\n      </Layout>\n    </Fragment>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}\n","import React from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport 'antd/dist/antd.css';\nimport './assets/scss/global.scss';\nimport \"@fontsource/open-sans\";\nimport \"typeface-montserrat\";\nimport AppNavigation from './pages/app-navigation';\nimport ScrollToTop from './components/ScrollToTop';\n\nfunction App() {\n  return (\n      <Router>\n        <ScrollToTop />\n        <AppNavigation />\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst islocalhost = Boolean(\n  window.location.hostname === '147.182.175.166' ||\n  // [::1] is the IPv6 147.182.175.166 address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered 147.182.175.166 for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (islocalhost) {\n        // This is running on 147.182.175.166. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to 147.182.175.166, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not 147.182.175.166. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-montserrat'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}